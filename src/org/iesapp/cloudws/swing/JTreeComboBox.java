/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.iesapp.cloudws.swing;

import java.awt.BorderLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.event.TreeExpansionEvent;
import javax.swing.event.TreeExpansionListener;
import javax.swing.plaf.ComboBoxUI;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author Josep
 */
public class JTreeComboBox extends JComboBox {

    /**
     * Creates new form JTreeComboBox
     */
    protected JTree tree = new JTree();
    

    public JTreeComboBox() {
                initComponents();
      
                this.tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
                this.setModel(new JTreeComboBox.TreeComboBoxModel());
                this.tree.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mousePressed(MouseEvent e) {
                                if(!e.isPopupTrigger()) {
                                        TreePath path = tree.getPathForLocation(e.getX(), e.getY());
                                        if(path != null) {
                                                if(!tree.getSelectionModel().isPathSelected(path)) {
                                                        tree.getSelectionModel().setSelectionPath(path);
                                                }
                                                JTreeComboBox.this.setSelectedItem(path.getLastPathComponent());
                                                JTreeComboBox.this.getUI().setPopupVisible(JTreeComboBox.this, false);
                                        }
                                } else {
                                        tree.getSelectionModel().clearSelection();
                                }
                        }
                });
                setUI(null);
        }

        @Override
        public void setUI(ComboBoxUI ui) {
                super.setUI(new AbstractComboBoxUI() {
                        @Override
                        protected JComponent getPopUpComponent() {
                                final JScrollPane jsp = new JScrollPane(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
                                if(getTree() != null) {                                      
                                        getTree().setSize(JTreeComboBox.this.getWidth(), getTree().getHeight());
                                        jsp.getViewport().setLayout(new BorderLayout());
                                        jsp.getViewport().add(getTree(), BorderLayout.CENTER);
                                        getTree().addTreeExpansionListener(new TreeExpansionListener() {
                                                @Override
                                                public void treeExpanded(TreeExpansionEvent event) {
                                                        popup.hide();
                                                        popup.show();
                                                }
                                                @Override
                                                public void treeCollapsed(TreeExpansionEvent event) {
                                                        popup.hide();
                                                        popup.show();
                                                }
                                        });
                                }
                                return jsp;
                        }
                });
        }

    public JTree getTree() {
        return tree;
    }

    public void setTreeModel(TreeModel treemodel) {
        this.tree.setModel(treemodel);
    }
       
        private class TreeComboBoxModel extends DefaultComboBoxModel {
                @Override
                public int getSize() {
                        return getTree().getRowCount();
                }
               
                @Override
                public Object getElementAt(int index) {
                        return getTree().getPathForRow(index).getLastPathComponent();
                }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
